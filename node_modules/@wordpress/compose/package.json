{
  "_from": "@wordpress/compose@^3.1.0",
  "_id": "@wordpress/compose@3.1.0",
  "_inBundle": false,
  "_integrity": "sha512-egpkE+nAoMMAmIvUXr5PK1aXDe2I8yJptiki81JK8m396IZw+JR9ZWercGLIwwa+s6V2wx+y+9uQOA8aj0HsMw==",
  "_location": "/@wordpress/compose",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "@wordpress%2fcompose",
    "fetchSpec": "^3.1.0",
    "name": "@wordpress/compose",
    "raw": "@wordpress/compose@^3.1.0",
    "rawSpec": "^3.1.0",
    "registry": true,
    "saveSpec": null,
    "scope": "@wordpress",
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/@wordpress/compose/-/compose-3.1.0.tgz",
  "_shasum": "0553f297e351a7d8858b736e9ce73df21b50a2d0",
  "_spec": "@wordpress/compose@^3.1.0",
  "_where": "F:\\xampp\\htdocs\\wordpress\\woo-guten-block\\wp-content\\plugins\\Post-Block",
  "author": {
    "name": "The WordPress Contributors"
  },
  "bugs": {
    "url": "https://github.com/WordPress/gutenberg/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "@babel/runtime": "^7.3.1",
    "@wordpress/element": "^2.2.0",
    "@wordpress/is-shallow-equal": "^1.2.0",
    "lodash": "^4.17.11"
  },
  "deprecated": false,
  "description": "WordPress higher-order components (HOCs).",
  "devDependencies": {},
  "gitHead": "80d228669adadb8dfcd24b8421517fed3be2d474",
  "homepage": "https://github.com/WordPress/gutenberg/tree/master/packages/compose/README.md",
  "keywords": [
    "React",
    "hoc",
    "wordpress"
  ],
  "license": "GPL-2.0-or-later",
  "main": "build/index.js",
  "module": "build-module/index.js",
  "name": "@wordpress/compose",
  "optionalDependencies": {},
  "publishConfig": {
    "access": "public"
  },
  "react-native": "src/index",
  "readme": "# Compose\n\nThe `compose` package is a collection of handy [Higher Order Components](https://facebook.github.io/react/docs/higher-order-components.html) (HOCs) you can use to wrap your WordPress components and provide some basic features like: state, instance id, pure...\n\nThe `compose` function is an alias to [flowRight](https://lodash.com/docs/#flowRight) from Lodash. It comes from functional programming, and allows you to compose any number of functions. You might also think of this as layering functions; `compose` will execute the last function first, then sequentially move back through the previous functions passing the result of each function upward.\n\nAn example that illustrates it for two functions:\n\n```js\nconst compose = ( f, g ) => x\n    => f( g( x ) );\n```\n\nHere's a simplified example of **compose** in use from Gutenberg's [`PluginSidebar` component](https://github.com/WordPress/gutenberg/blob/master/packages/edit-post/src/components/sidebar/plugin-sidebar/index.js):\n\nUsing compose:\n\n```js\nconst applyWithSelect = withSelect( ( select, ownProps ) => {\n\treturn doSomething( select, ownProps);\n} );\nconst applyWithDispatch = withDispatch( ( dispatch, ownProps ) => {\n\treturn doSomethingElse( dispatch, ownProps );\n} );\n\nexport default compose(\n\twithPluginContext,\n\tapplyWithSelect,\n\tapplyWithDispatch,\n)( PluginSidebarMoreMenuItem );\n```\n\nWithout `compose`, the code would look like this:\n\n```js\nconst applyWithSelect = withSelect( ( select, ownProps ) => {\n\treturn doSomething( select, ownProps);\n} );\nconst applyWithDispatch = withDispatch( ( dispatch, ownProps ) => {\n\treturn doSomethingElse( dispatch, ownProps );\n} );\n\nexport default withPluginContext(\n\tapplyWithSelect(\n\t\tapplyWithDispatch(\n\t\t\tPluginSidebarMoreMenuItem\n\t\t)\n\t)\n);\n\n\n## Installation\n\nInstall the module\n\n```bash\nnpm install @wordpress/compose --save\n```\n\n_This package assumes that your code will run in an **ES2015+** environment. If you're using an environment that has limited or no support for ES2015+ such as lower versions of IE then using [core-js](https://github.com/zloirock/core-js) or [@babel/polyfill](https://babeljs.io/docs/en/next/babel-polyfill) will add support for these methods. Learn more about it in [Babel docs](https://babeljs.io/docs/en/next/caveats)._\n\n## Usage\n\nAn example using the HOC `withInstanceId` from the compose package:\n\n```js\nimport { withInstanceId } from '@wordpress/compose';\n\nfunction WrappedComponent( props ) {\n\treturn props.instanceId;\n}\n\nconst ComponentWithInstanceIdProp = withInstanceId( WrappedComponent );\n```\n\nFor more details, you can refer to each Higher Order Component's README file. [Available components are located here.](https://github.com/WordPress/gutenberg/tree/master/packages/compose/src)\n\n<br/><br/><p align=\"center\"><img src=\"https://s.w.org/style/images/codeispoetry.png?1\" alt=\"Code is Poetry.\" /></p>\n",
  "readmeFilename": "README.md",
  "repository": {
    "directory": "packages/compose",
    "type": "git",
    "url": "git+https://github.com/WordPress/gutenberg.git"
  },
  "version": "3.1.0"
}
