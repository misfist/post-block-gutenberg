{"version":3,"sources":["@wordpress/rich-text/src/register-format-type.js"],"names":["registerFormatType","name","settings","window","console","error","test","getFormatType","tagName","className","formatTypeForBareElement","getFormatTypeForBareElement","formatTypeForClassName","getFormatTypeForClassName","title","keywords","length","addFormatTypes","__experimentalCreatePrepareEditableTree","OriginalComponent","selectPrefix","dispatchPrefix","Component","props","newProps","propsByPrefix","Object","keys","reduce","accumulator","key","startsWith","slice","args","richTextIdentifier","identifier","blockClientId","clientId","__experimentalCreateOnChangeEditableValue","hocs","__experimentalGetPropsForEditableTreePreparation","push","sel","value","__experimentalGetPropsForEditableTreeChangeHandler","disp"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { mapKeys } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { select, dispatch, withSelect, withDispatch } from '@wordpress/data';\nimport { addFilter } from '@wordpress/hooks';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Registers a new format provided a unique name and an object defining its\n * behavior.\n *\n * @param {string}   name                 Format name.\n * @param {Object}   settings             Format settings.\n * @param {string}   settings.tagName     The HTML tag this format will wrap the selection with.\n * @param {string}   [settings.className] A class to match the format.\n * @param {string}   settings.title       Name of the format.\n * @param {Function} settings.edit        Should return a component for the user to interact with the new registered format.\n *\n * @return {WPFormat|undefined} The format, if it has been successfully registered;\n *                              otherwise `undefined`.\n */\nexport function registerFormatType( name, settings ) {\n\tsettings = {\n\t\tname,\n\t\t...settings,\n\t};\n\n\tif ( typeof settings.name !== 'string' ) {\n\t\twindow.console.error(\n\t\t\t'Format names must be strings.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( ! /^[a-z][a-z0-9-]*\\/[a-z][a-z0-9-]*$/.test( settings.name ) ) {\n\t\twindow.console.error(\n\t\t\t'Format names must contain a namespace prefix, include only lowercase alphanumeric characters or dashes, and start with a letter. Example: my-plugin/my-custom-format'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( select( 'core/rich-text' ).getFormatType( settings.name ) ) {\n\t\twindow.console.error(\n\t\t\t'Format \"' + settings.name + '\" is already registered.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif (\n\t\ttypeof settings.tagName !== 'string' ||\n\t\tsettings.tagName === ''\n\t) {\n\t\twindow.console.error(\n\t\t\t'Format tag names must be a string.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif (\n\t\t( typeof settings.className !== 'string' || settings.className === '' ) &&\n\t\tsettings.className !== null\n\t) {\n\t\twindow.console.error(\n\t\t\t'Format class names must be a string, or null to handle bare elements.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( ! /^[_a-zA-Z]+[a-zA-Z0-9-]*$/.test( settings.className ) ) {\n\t\twindow.console.error(\n\t\t\t'A class name must begin with a letter, followed by any number of hyphens, letters, or numbers.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( settings.className === null ) {\n\t\tconst formatTypeForBareElement = select( 'core/rich-text' )\n\t\t\t.getFormatTypeForBareElement( settings.tagName );\n\n\t\tif ( formatTypeForBareElement ) {\n\t\t\twindow.console.error(\n\t\t\t\t`Format \"${ formatTypeForBareElement.name }\" is already registered to handle bare tag name \"${ settings.tagName }\".`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t} else {\n\t\tconst formatTypeForClassName = select( 'core/rich-text' )\n\t\t\t.getFormatTypeForClassName( settings.className );\n\n\t\tif ( formatTypeForClassName ) {\n\t\t\twindow.console.error(\n\t\t\t\t`Format \"${ formatTypeForClassName.name }\" is already registered to handle class name \"${ settings.className }\".`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif ( ! ( 'title' in settings ) || settings.title === '' ) {\n\t\twindow.console.error(\n\t\t\t'The format \"' + settings.name + '\" must have a title.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( 'keywords' in settings && settings.keywords.length > 3 ) {\n\t\twindow.console.error(\n\t\t\t'The format \"' + settings.name + '\" can have a maximum of 3 keywords.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( typeof settings.title !== 'string' ) {\n\t\twindow.console.error(\n\t\t\t'Format titles must be strings.'\n\t\t);\n\t\treturn;\n\t}\n\n\tdispatch( 'core/rich-text' ).addFormatTypes( settings );\n\n\tif ( settings.__experimentalCreatePrepareEditableTree ) {\n\t\taddFilter( 'experimentalRichText', name, ( OriginalComponent ) => {\n\t\t\tconst selectPrefix = `format_prepare_props_(${ name })_`;\n\t\t\tconst dispatchPrefix = `format_on_change_props_(${ name })_`;\n\n\t\t\tconst Component = ( props ) => {\n\t\t\t\tconst newProps = { ...props };\n\t\t\t\tconst propsByPrefix = Object.keys( props ).reduce( ( accumulator, key ) => {\n\t\t\t\t\tif ( key.startsWith( selectPrefix ) ) {\n\t\t\t\t\t\taccumulator[ key.slice( selectPrefix.length ) ] = props[ key ];\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( key.startsWith( dispatchPrefix ) ) {\n\t\t\t\t\t\taccumulator[ key.slice( dispatchPrefix.length ) ] = props[ key ];\n\t\t\t\t\t}\n\n\t\t\t\t\treturn accumulator;\n\t\t\t\t}, {} );\n\t\t\t\tconst args = {\n\t\t\t\t\trichTextIdentifier: props.identifier,\n\t\t\t\t\tblockClientId: props.clientId,\n\t\t\t\t};\n\n\t\t\t\tif ( settings.__experimentalCreateOnChangeEditableValue ) {\n\t\t\t\t\tnewProps[ `format_value_functions_(${ name })` ] =\n\t\t\t\t\t\tsettings.__experimentalCreatePrepareEditableTree(\n\t\t\t\t\t\t\tpropsByPrefix,\n\t\t\t\t\t\t\targs\n\t\t\t\t\t\t);\n\t\t\t\t\tnewProps[ `format_on_change_functions_(${ name })` ] =\n\t\t\t\t\t\tsettings.__experimentalCreateOnChangeEditableValue(\n\t\t\t\t\t\t\tpropsByPrefix,\n\t\t\t\t\t\t\targs\n\t\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tnewProps[ `format_prepare_functions_(${ name })` ] =\n\t\t\t\t\t\tsettings.__experimentalCreatePrepareEditableTree(\n\t\t\t\t\t\t\tpropsByPrefix,\n\t\t\t\t\t\t\targs\n\t\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn <OriginalComponent { ...newProps } />;\n\t\t\t};\n\n\t\t\tconst hocs = [];\n\n\t\t\tif ( settings.__experimentalGetPropsForEditableTreePreparation ) {\n\t\t\t\thocs.push( withSelect( ( sel, { clientId, identifier } ) =>\n\t\t\t\t\tmapKeys(\n\t\t\t\t\t\tsettings.__experimentalGetPropsForEditableTreePreparation( sel, {\n\t\t\t\t\t\t\trichTextIdentifier: identifier,\n\t\t\t\t\t\t\tblockClientId: clientId,\n\t\t\t\t\t\t} ),\n\t\t\t\t\t\t( value, key ) => selectPrefix + key\n\t\t\t\t\t)\n\t\t\t\t) );\n\t\t\t}\n\n\t\t\tif ( settings.__experimentalGetPropsForEditableTreeChangeHandler ) {\n\t\t\t\thocs.push( withDispatch( ( disp, { clientId, identifier } ) =>\n\t\t\t\t\tmapKeys(\n\t\t\t\t\t\tsettings.__experimentalGetPropsForEditableTreeChangeHandler( disp, {\n\t\t\t\t\t\t\trichTextIdentifier: identifier,\n\t\t\t\t\t\t\tblockClientId: clientId,\n\t\t\t\t\t\t} ),\n\t\t\t\t\t\t( value, key ) => dispatchPrefix + key\n\t\t\t\t\t)\n\t\t\t\t) );\n\t\t\t}\n\n\t\t\treturn hocs.length ? compose( hocs )( Component ) : Component;\n\t\t} );\n\t}\n\n\treturn settings;\n}\n"]}